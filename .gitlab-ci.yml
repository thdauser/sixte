# SIXTE CI/CD configuration
#
# Triggers and jobs that are then run:
# * Changes pushed to any branch -> build, test
# * Changes pushed to master     -> build, test, deploy
# * Tag pushed to any branch     -> build, update
# * Triggerd by SIMPUT pipeline  -> build, test
#
# Will use SIMPUT at /userdata/data/sixte/simputsoft by default, or at the
# SIMPUT GitLab builds directory if USE_SIMPUT_GITLAB_BUILD set to "true" (e.g.,
# when triggered by SIMPUT pipeline).


default:
  before_script:
    - source /software/profile.in
    - module load heasoft
    - export SIXTE=`pwd`
    - >
      if [[ "$USE_SIMPUT_GITLAB_BUILD" == "true" ]]; then
        export SIMPUT=${SIXTE}/../simput
      else
        export SIMPUT=/userdata/data/sixte/simputsoft
      fi
    - export HEADASNOQUERY=
    - export HEADASPROMPT=/dev/null
  after_script:
    # Remove artifacts from failed make distcheck
    - chmod u+w -R sixte-*

stages:
  - build
  - test
  - deploy
  - update

build:
  stage: build
  script:
    - autoreconf --install --force
    - ./configure --prefix=$SIXTE --with-simput=$SIMPUT --with-gsl-prefix=$HEADAS # be explicit about gsl library
    - make
    - make install
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "pipeline"
  artifacts:
    expire_in: 30 min
    paths:
      - ./*

test:
  stage: test
  script:
    - . $SIXTE/sixte-install.sh
    - module load isis
    - module load Localmodels/relxill
    - module load conda
    - conda activate
    - ln -sf /home/sixte/instruments.git/instruments share/sixte/instruments
    - make check
    - make test
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "pipeline"
  artifacts:
    expire_in: 30 min
    paths:
      - ./test/*

deploy:
  stage: deploy
  dependencies: []
  script:
    - git push /data/git/sixt.git HEAD:master
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
      when: never
    - if: $CI_COMMIT_BRANCH == "master"

update:
  stage: update
  dependencies:
    - build
  script:
    - make distcheck
    - rsync -vhu sixte-?.?.?*.tar.gz /data/www/sixte_archive/sixte/
  rules:
    - if: $CI_COMMIT_TAG
